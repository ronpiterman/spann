<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2010 the original author or authors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns="http://os.masetta.com/spann/schema/spann-1.0" targetNamespace="http://os.masetta.com/spann/schema/spann-1.0"
	elementFormDefault="qualified" attributeFormDefault="unqualified"

	xmlns:beans="http://www.springframework.org/schema/beans">

	<xsd:import namespace="http://www.springframework.org/schema/beans" />

	<xsd:element name="scan">
		<xsd:annotation>
			<xsd:documentation>
				Scan the class path and invoke visitors. If no visitor
				child elements are present, the DefaultVisitor will be used.
				If any visitor element is present, DefaultVisitor must
				be explicitly added (if needed).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="visitor" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
							Define a visitor for class metadata
								]]></xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:attribute name="class" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation source="java:java.lang.Class"><![CDATA[
									Full qualified class name of a 
									MetadataVisitor<ClassMetadata>.
									Must have a public default constructor.
								]]></xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="base-package" type="xsd:string"
				use="required">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
						The comma-separated list of packages to scan.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="resource-pattern" type="xsd:string"
				default="**/*.class">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							Controls the class files eligible for component detection. 
							Defaults to "**/*.class", the recommended value.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="scope-proxy-mode-resolver" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation source="java:java.lang.Class"><![CDATA[
							Full qualified class name of a ScopeProxyModeResolver to use
							for determining the scope-proxy mode to use when proxy creation is needed.
							
							This attribute is mutually exclusive with the 'scope-proxy-mode' attribute.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="scope-proxy-mode" default="no">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
							One of 'no' , 'interfaces' or 'targetClass' , determine the
							scope proxy mode to use for beans with scope which needs proxying. 
							
							This attribute is mutually exclusive with the 'scope-proxy-mode-resolver' attribute.
					]]></xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="no" />
						<xsd:enumeration value="interfaces" />
						<xsd:enumeration value="targetClass" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="name-generator" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation source="java:java.lang.Class"><![CDATA[
							Full qualified class name of a BeanNameGenerator to use
							for generating bean names. 
							Spann's bean name generation will rely, but not be mandated by,
							the given implementation. For details  							
							see ClassPathScanner.setBeanNameGenerator(...) for details.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

</xsd:schema>